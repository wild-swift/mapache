/*
 * Copyright (C) 2020 Wild Swift
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java-library'
apply plugin: 'kotlin'

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group = 'name.wildswift.android'
version = publish_version

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.squareup:javapoet:1.12.1'
    implementation 'org.codehaus.groovy:groovy-all:3.0.2'

    implementation project(':mapache-library')
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/libs/mapache-annotation-processor-${this.version}.jar")
            artifact sourcesJar
            artifact javadocJar

            groupId this.group
            artifactId 'mapache-navigation'
            version this.version

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included in the pom.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
                // Add local library as published artifact
                def dependencyNode = dependenciesNode.appendNode('dependency')
                dependencyNode.appendNode('groupId', 'name.wildswift.android')
                dependencyNode.appendNode('artifactId', 'mapache-library')
                dependencyNode.appendNode('version', dep_version)
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['Production']
    pkg {
        repo = 'general'
        name = 'mapache-navigation'
        licenses = ['Apache-2.0']
        publish = true
        publicDownloadNumbers = true
        vcsUrl = 'https://github.com/wild-swift/mapache.git'
        version {
            name = publish_version
            desc = 'First alpha version'
            released = new Date()
            vcsTag = publish_version
        }
    }
}

bintrayUpload.dependsOn(jar, javadocJar, sourcesJar)
bintrayUpload.dependsOn "generatePomFileForProductionPublication"
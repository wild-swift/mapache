/*
 * Copyright (C) 2018 Wild Swift
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java-gradle-plugin'
apply plugin: 'kotlin'

apply plugin: 'maven-publish'

group = 'name.wildswift.android'
version = publish_version

gradlePlugin {
    plugins {
        mapacheNavigationPlugin {
            id = 'mapache-plugin'
            implementationClass = 'name.wildswift.mapache.generator.MapachePlugin'
        }
        automatedPublishing = false
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

dependencies {
    implementation gradleApi()

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api 'com.squareup:javapoet:1.12.1'

    implementation "com.android.tools.build:gradle:$build_tools_dep_version"
    implementation "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

    testImplementation 'junit:junit:4.12'
    testImplementation gradleTestKit()
    testImplementation "com.android.tools.build:gradle:$build_tools_dep_version"
}

publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/libs/mapache-plugin-${this.version}.jar")
            artifact sourcesJar
            artifact javadocJar

            groupId this.group
            artifactId 'mapache-plugin'
            version this.version

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.api.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included in the pom.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name 'MapacheNexus'
            url project.hasProperty('nexusUrl') ? nexusUrl : System.getenv('NEXUS_URL')
            allowInsecureProtocol = true
            credentials {
                username project.hasProperty('nexusUser') ? nexusUser : System.getenv('NEXUS_USER')
                password project.hasProperty('nexusPassword') ? nexusPassword : System.getenv('NEXUS_PASSWORD')
            }
        }
    }
}